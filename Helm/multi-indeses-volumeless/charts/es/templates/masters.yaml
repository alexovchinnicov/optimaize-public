apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-master
  labels:
    component: elasticsearch
    role: master
spec:
  replicas: {{ .Values.master.replicas }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
    spec:
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 2
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 2
      terminationGracePeriodSeconds: 0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values:
                  - master
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: init-sysctl
        image: busybox
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: es-master
        image: {{ .Values.image }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: {{ .Values.cluster_name | quote }}
        - name: XPACK_MON
          value: {{ .Values.xpack.monitoring | quote }}
        - name: XPACK_SEC
          value: {{ .Values.xpack.security | quote }}
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: {{ .Values.client.env.http | quote }}
        - name: MAX_LOCAL_STORAGE_NODES
          value: {{ .Values.master.env.node_max_local_storage_nodes | quote }}
        - name: discovery.zen.ping.unicast.hosts
          value: "elasticsearch-discovery"
        - name: discovery.zen.minimum_master_nodes
          value: {{ .Values.master.env.discovery_zen_minimum_master_nodes | quote }}
        - name: ES_JAVA_OPTS
          value: {{ .Values.master.env.java_opts }}
        - name: NETWORK_HOST
          value: _site_,_lo_
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          limits:
            cpu: {{ .Values.master.limits.cpu }}
        ports:
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data
        - name: esconfig
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
          - emptyDir:
              medium: ""
            name: "storage"
          - name : esconfig
            configMap:
              name: es-configmap
  selector:
    matchLabels:
      role: master
